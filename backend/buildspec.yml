version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: ecommerce-backend
  secrets-manager:
    DOCKERHUB_USERNAME: DockerhubCredentials:DOCKERHUB_USERNAME
    DOCKERHUB_PASSWORD: DockerhubCredentials:DOCKERHUB_PASSWORD

phases:
  install:
    commands:
      - pip install --upgrade awscli
      - curl -LO "https://dl.k8s.io/release/v1.32.0/bin/linux/amd64/kubectl"
      - chmod +x kubectl
      - mv kubectl /usr/local/bin/
      - aws --version
      - kubectl version --client
  pre_build:
    commands:
      - export IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo "$DOCKERHUB_PASSWORD" | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 607735330434.dkr.ecr.us-east-1.amazonaws.com
      - aws eks update-kubeconfig --region us-east-1 --name ecommerce-eks
      - aws sts get-caller-identity
      - kubectl config current-context
      - kubectl version --output=yaml
      - kubectl get nodes
  build:
    commands:
      - echo Build started on `date`
      - docker build -t 607735330434.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_REPO_NAME:latest -f backend/Dockerfile backend
      - docker tag 607735330434.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_REPO_NAME:latest 607735330434.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - docker push 607735330434.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_REPO_NAME:latest
      - docker push 607735330434.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Updating EKS deployment...
      - kubectl set image deployment/backend backend=607735330434.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG -n bookstore

artifacts:
  files: '**/*'