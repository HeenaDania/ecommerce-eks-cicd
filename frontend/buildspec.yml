version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: ecommerce-frontend
    IMAGE_TAG: latest

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 607735330434.dkr.ecr.us-east-1.amazonaws.com
      - REPOSITORY_URI=607735330434.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=$COMMIT_HASH
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Updating EKS deployment...
      - aws eks update-kubeconfig --region us-east-1 --name ecommerce-eks
      - kubectl set image deployment/frontend frontend=$REPOSITORY_URI:$IMAGE_TAG -n bookstore
artifacts:
  files: '**/*'
